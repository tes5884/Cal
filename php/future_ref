//Passwords hashing
<?php
	// Hash the password.  $hashedPassword will be a 60-character string.
	$hashedPassword = password_hash('my super cool password', PASSWORD_DEFAULT);
	 
	// You can now safely store the contents of $hashedPassword in your database!
	 
	// Check if a user has provided the correct password by comparing what they typed with our hash
	password_verify('the wrong password', $hashedPassword); // false
	 
	password_verify('my super cool password', $hashedPassword); // true
?>


//email verification
<?php
	filter_var('sgamgee@example.com', FILTER_VALIDATE_EMAIL); // Returns "sgamgee@example.com". This is a valid email address.
	filter_var('sauron@mordor', FILTER_VALIDATE_EMAIL); // Returns boolean false! This is *not* a valid email address.
?>

//send email
<?php
	// Include the PHPMailer library
	require_once('phpmailer-5.2.7/PHPMailerAutoload.php');
	 
	// Passing 'true' enables exceptions.  This is optional and defaults to false.
	$mailer = new PHPMailer(true);
	 
	// Send a mail from Bilbo Baggins to Gandalf the Grey
	 
	// Set up to, from, and the message body.  The body doesn't have to be HTML; check the PHPMailer documentation for details.
	$mailer->Sender = 'bbaggins@example.com';
	$mailer->AddReplyTo('bbaggins@example.com', 'Bilbo Baggins');
	$mailer->SetFrom('bbaggins@example.com', 'Bilbo Baggins');
	$mailer->AddAddress('gandalf@example.com');
	$mailer->Subject = 'The finest weed in the South Farthing';
	$mailer->MsgHTML('<p>You really must try it, Gandalf!</p><p>-Bilbo</p>');
	 
	// Set up our connection information.
	$mailer->IsSMTP();
	$mailer->SMTPAuth = true;
	$mailer->SMTPSecure = 'ssl';
	$mailer->Port = 465;
	$mailer->Host = 'my smtp host';
	$mailer->Username = 'my smtp username';
	$mailer->Password = 'my smtp password';
	 
	// All done!
	$mailer->Send();
?>

//check if active user
<?php 
	require_once 'init.php';
	if(!$user->active){
		Header('Location: index.php');
		Exit();
	}
?>